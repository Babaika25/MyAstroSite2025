---
import '@fontsource/ibm-plex-sans/100.css';
import '@fontsource/ibm-plex-sans/200.css';
import '@fontsource/ibm-plex-sans/300.css';
import '@fontsource/ibm-plex-sans/400.css';
import '@fontsource/ibm-plex-sans/500.css';
import '@fontsource/ibm-plex-sans/600.css';
import '@fontsource/ibm-plex-sans/700.css';
import '@fontsource/ibm-plex-sans/100-italic.css';
import '@fontsource/ibm-plex-sans/200-italic.css';
import '@fontsource/ibm-plex-sans/300-italic.css';
import '@fontsource/ibm-plex-sans/400-italic.css';
import '@fontsource/ibm-plex-sans/500-italic.css';
import '@fontsource/ibm-plex-sans/600-italic.css';
import '@fontsource/ibm-plex-sans/700-italic.css';

import { ClientRouter } from "astro:transitions";
import Analytics from "@vercel/analytics/astro";

import { SITE } from "@/lib/config";

import "@/styles/global.css";
import BackToTop from "@/components/back-to-top.astro";

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  pageType?: string;
  canonicalURL?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage,
  pageType = SITE.pageType,
  canonicalURL = new URL(Astro.url.pathname, Astro.url),
} = Astro.props;

const socialImageURL = new URL(ogImage ?? SITE.ogImage, Astro.site).toString();

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  image: `${socialImageURL}`,
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      ...(profile && { url: profile }),
    },
  ],
};
---

<script>
  // Centralized theme management
  function getThemePreference() {
    const storedTheme = localStorage.getItem("theme");
    if (storedTheme === "dark" || storedTheme === "light") {
      return storedTheme;
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  }

  function setThemeAppearance(theme) {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", theme);
  }

  // Set theme on initial page load
  document.addEventListener("astro:page-load", () => {
    setThemeAppearance(getThemePreference());
  });

  // Re-apply theme on page swap/navigation
  document.addEventListener("astro:after-swap", () => {
    setThemeAppearance(getThemePreference());
  });

  // Expose toggle for theme button
  window.toggleTheme = function () {
    const isDark = document.documentElement.classList.contains("dark");
    setThemeAppearance(isDark ? "light" : "dark");
  };
</script>

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

      <!-- Open Graph / Facebook -->
    <meta property="og:type" content={pageType} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:url" content={canonicalURL} />

    <!-- X / Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <ClientRouter />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <meta name="theme-color" content="" />
    </head>
    <body class="relative min-h-screen overflow-x-hidden">
    <slot />
    <BackToTop />
    <Analytics />
    </body>
</html>